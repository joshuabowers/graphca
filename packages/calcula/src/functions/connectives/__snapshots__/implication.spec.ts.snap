// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`implies returns an Implication on variable input 1`] = `
[
  [
    "(x→y)",
    "identified implication",
  ],
  [
    "([x]→y)",
    "processing left operand",
  ],
  [
    "x",
    "referenced variable",
  ],
  [
    "({x}→[y])",
    "processed left operand; processing right operand",
  ],
  [
    "y",
    "referenced variable",
  ],
  [
    "(x→{y})",
    "processed right operand",
  ],
  [
    "(x→y)",
    "created implication",
  ],
]
`;

exports[`implies returns false if the right argument is false 1`] = `
[
  [
    "(true→false)",
    "identified implication",
  ],
  [
    "([true]→false)",
    "processing left operand",
  ],
  [
    "true",
    "created boolean",
  ],
  [
    "({true}→[false])",
    "processed left operand; processing right operand",
  ],
  [
    "false",
    "created boolean",
  ],
  [
    "(true→{false})",
    "processed right operand",
  ],
  [
    "(true→false)",
    "implicative identity",
  ],
  [
    "false",
    "created boolean",
  ],
]
`;

exports[`implies returns the complement of the left if the right is false 1`] = `
[
  [
    "(x→false)",
    "identified implication",
  ],
  [
    "([x]→false)",
    "processing left operand",
  ],
  [
    "x",
    "referenced variable",
  ],
  [
    "({x}→[false])",
    "processed left operand; processing right operand",
  ],
  [
    "false",
    "created boolean",
  ],
  [
    "(x→{false})",
    "processed right operand",
  ],
  [
    "(x→false)",
    "implicative complementation",
  ],
  [
    "¬(x)",
    "identified complement",
  ],
  [
    "¬([x])",
    "processing argument",
  ],
  [
    "x",
    "referenced variable",
  ],
  [
    "¬({x})",
    "processed argument",
  ],
  [
    "¬(x)",
    "created complement",
  ],
]
`;

exports[`implies returns the right operand if the left is true 1`] = `
[
  [
    "(true→x)",
    "identified implication",
  ],
  [
    "([true]→x)",
    "processing left operand",
  ],
  [
    "true",
    "created boolean",
  ],
  [
    "({true}→[x])",
    "processed left operand; processing right operand",
  ],
  [
    "x",
    "referenced variable",
  ],
  [
    "(true→{x})",
    "processed right operand",
  ],
  [
    "(true→x)",
    "implicative identity",
  ],
  [
    "x",
    "referenced variable",
  ],
]
`;

exports[`implies returns true if both arguments are false 1`] = `
[
  [
    "(false→false)",
    "identified implication",
  ],
  [
    "([false]→false)",
    "processing left operand",
  ],
  [
    "false",
    "created boolean",
  ],
  [
    "({false}→[false])",
    "processed left operand; processing right operand",
  ],
  [
    "false",
    "created boolean",
  ],
  [
    "(false→{false})",
    "processed right operand",
  ],
  [
    "(false→false)",
    "implicative annihilator",
  ],
  [
    "true",
    "created boolean",
  ],
]
`;

exports[`implies returns true if the left argument is false 1`] = `
[
  [
    "(false→true)",
    "identified implication",
  ],
  [
    "([false]→true)",
    "processing left operand",
  ],
  [
    "false",
    "created boolean",
  ],
  [
    "({false}→[true])",
    "processed left operand; processing right operand",
  ],
  [
    "true",
    "created boolean",
  ],
  [
    "(false→{true})",
    "processed right operand",
  ],
  [
    "(false→true)",
    "implicative annihilator",
  ],
  [
    "true",
    "created boolean",
  ],
]
`;

exports[`implies returns true if the left operand is false 1`] = `
[
  [
    "(false→x)",
    "identified implication",
  ],
  [
    "([false]→x)",
    "processing left operand",
  ],
  [
    "false",
    "created boolean",
  ],
  [
    "({false}→[x])",
    "processed left operand; processing right operand",
  ],
  [
    "x",
    "referenced variable",
  ],
  [
    "(false→{x})",
    "processed right operand",
  ],
  [
    "(false→x)",
    "implicative annihilator",
  ],
  [
    "true",
    "created boolean",
  ],
]
`;

exports[`implies returns true if the right operand is true 1`] = `
[
  [
    "(x→true)",
    "identified implication",
  ],
  [
    "([x]→true)",
    "processing left operand",
  ],
  [
    "x",
    "referenced variable",
  ],
  [
    "({x}→[true])",
    "processed left operand; processing right operand",
  ],
  [
    "true",
    "created boolean",
  ],
  [
    "(x→{true})",
    "processed right operand",
  ],
  [
    "(x→true)",
    "implicative annihilator",
  ],
  [
    "true",
    "created boolean",
  ],
]
`;

exports[`implies returns true when given two true things 1`] = `
[
  [
    "(true→true)",
    "identified implication",
  ],
  [
    "([true]→true)",
    "processing left operand",
  ],
  [
    "true",
    "created boolean",
  ],
  [
    "({true}→[true])",
    "processed left operand; processing right operand",
  ],
  [
    "true",
    "created boolean",
  ],
  [
    "(true→{true})",
    "processed right operand",
  ],
  [
    "(true→true)",
    "implicative identity",
  ],
  [
    "true",
    "created boolean",
  ],
]
`;
