@keyframes flash {
  from {
    opacity: 0.25;
  }
  to {
    opacity: 0.9;
  }
}

@value valid from "../Parse/Parse.module.css";
@value error from "../Parse/Parse.module.css";

.normal {
  align-self: end;
  overflow: scroll;
  font-family: 'Fira Code', monospace;
  font-size: 1.2em;
  line-height: 1.5;
  height: 100%;
  padding: 0.5em;
  background-color: var(--terminal-background-color);
  color: var(--terminal-color);
  display: grid;
  grid: auto-flow / auto 1fr;
  align-items: baseline;
  align-content: start;
  counter-reset: terminal-entries;
  box-sizing: border-box;
}

.markerTrack {
  align-self: stretch;
  justify-self: end;
  box-sizing: border-box;
}

.marker, .currentMarker {
  color: var(--terminal-color);
  position: sticky;
  top: 0;
  padding: 0.1em 0 0.1em 0.5em;
  margin: 0.55em 0 1.5em;
  border-top-left-radius: 0.5em;
  border-bottom-left-radius: 0.75em;
}

.markerTrack:has(+ :global(.error)) .marker {
  background-color: var(--entry-error-background-color);
  color: var(--entry-error-color);
}

.markerTrack:has(+ :global(.valid)) .marker {
  background-color: var(--entry-valid-background-color);
  color: var(--entry-valid-color);
}

.marker::before {
  counter-increment: terminal-entries;
  content: counter(terminal-entries);
}

.reference {
  grid-column: span 2;
  height: 0;
  user-select: none;
}

.currentMarker {
  justify-self: end;
  margin: 0;
}

.currentMarker::before {
  content: '\03bb'
}

.currentMarker, .currentLine {
  background-color: var(--entry-unknown-background-color);
  color: var(--entry-unknown-color);
  align-self: baseline;
}

.currentLine {
  padding: 0.5em 0.5em;
  margin: auto 0;
  /* align-self: stretch; */
}

.caret {
  font-variant-ligatures: no-common-ligatures;
  animation: 1s linear infinite alternate-reverse flash;
}
